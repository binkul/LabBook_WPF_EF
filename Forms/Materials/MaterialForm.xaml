<RibbonWindow x:Class="LabBook_WPF_EF.Forms.Materials.MaterialForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabBook_WPF_EF.Forms.Materials"
        xmlns:converters="clr-namespace:LabBook_WPF_EF.Converters"
        xmlns:vm="clr-namespace:LabBook_WPF_EF.Forms.Materials.ModelView"
        xmlns:vo="clr-namespace:LabBook_WPF_EF.Commons"
        xmlns:naviMV="clr-namespace:LabBook_WPF_EF.Navigation"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:MaterialMV, IsDesignTimeCreatable=false}"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        Icon="/img/Atom.png"
        ResizeMode="CanResize"
        Title="Surowce" 
        Height="{Binding FormHeight, Mode=TwoWay}" 
        Width="{Binding FormWidth, Mode=TwoWay}"
        Left="{Binding FormLeft, Mode=TwoWay}"
        Top="{Binding FormTop, Mode=TwoWay}" >
    <Window.Resources>
        <vo:CombosVM x:Key="combos" />
        <naviMV:NavigationMV x:Key="navi" />
        <converters:NaviCurrentConverter x:Key="NaviCurrentConverter" />
        <converters:DangerToRedColorConverter x:Key="DangerToRedConverter" />
        <converters:PriceNullToBoldConverter x:Key="PriceToBoldConverter" />
        <converters:PriceSelectedToColorConverter x:Key="PriceTocColorConverter" />
        <converters:CurrencyToColorConverter x:Key="CurrncyToColorConverter" />
        <converters:CurrencyToBoldConverter x:Key="CurrencyToBoldConverter" />
        <Style x:Key="AllignColmnHeaderCenter" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignCellCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="AllignCellLeft" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="3,0,0,0" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="AllignCellRight" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="0,0,3,0" />
        </Style>
        <Style x:Key="DateErrorStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Yellow"/>
                    <Setter Property="ToolTip" Value="Niepoprawny format daty"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DoubleErrorStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Yellow"/>
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="DataGridBorderColor" Color="#FFB1AEAE"/>
    </Window.Resources>
    <i:Interaction.Triggers>
        <!-- Closing Form event -->
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel Margin="0,0,0,0" >
        <!-- Menu Ribbon -->
        <Ribbon DockPanel.Dock="Top" FontWeight="Bold" FontSize="14" >
            <RibbonTab Header="Plik" >
                <RibbonGroup Header="Operacje"  FontSize="10">
                    <StackPanel Orientation="Vertical" Margin="5,2,5,0" >
                        <Button Width="48" Height="48" Command="{Binding SaveButton}">
                            <Image Source="/img/Save.png" />
                            <Button.ToolTip >
                                <ToolTip Background="Yellow">
                                    <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                        <TextBlock FontSize="12">Zapisz zmiany</TextBlock>
                                    </DockPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                        <Label Content="Zapisz" Padding="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" />
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="5,2,5,0" >
                        <Button Width="48" Height="48" Command="{Binding DeleteButton}">
                            <Image Source="/img/Delete.png" />
                            <Button.ToolTip >
                                <ToolTip Background="Yellow">
                                    <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                        <TextBlock FontSize="12">Usuń materiał</TextBlock>
                                    </DockPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                        <Label Content="Usuń" Padding="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" />
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Dodawanie"  FontSize="10">
                    <StackPanel Orientation="Vertical" Margin="5,2,5,0" >
                        <Button Width="48" Height="48" Command="{Binding AddNewButton}">
                            <Image Source="/img/AddNew.png" />
                            <Button.ToolTip >
                                <ToolTip Background="Yellow">
                                    <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                        <TextBlock FontSize="12">Dodaj nowy</TextBlock>
                                    </DockPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                        <Label Content="Nowy" Padding="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" />
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
            <RibbonTab Header="Clp" IsEnabled="{Binding IsDanger, Mode=OneWay}">
                <RibbonGroup Header="Zmiany Clp"  FontSize="10">
                    <StackPanel Orientation="Vertical" Margin="5,2,5,0" >
                        <Button Width="48" Height="48" Command="{Binding ClpButton}">
                            <Image Source="/img/Biohazard.png" />
                            <Button.ToolTip >
                                <ToolTip Background="Yellow">
                                    <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                        <TextBlock FontSize="12">Otwórz CLP</TextBlock>
                                    </DockPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                        <Label Content="Nowy" Padding="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" />
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <!-- Grid and Tabs -->
        <Grid Background="#FFE5E5E5">
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="65" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions >
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            
            <!-- Material name and date -->
            <Label Grid.Column="0" Grid.Row="0" Content="Nazwa" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Right"  />
            <TextBox Grid.Column="1" Grid.Row="0" x:Name="TxtName" VerticalAlignment="Center" FontWeight="Bold" KeyUp="TxtBox_KeyUp" 
                     FontSize="14" Margin="5,0,5,0" Padding="2,2,0,0" Height="28"
                     Text="Na razie jakiś tekst" />
            <!--Text="{Binding SelectedItem.name, ElementName=DgMaterials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding IsPermited, Mode=OneWay}" />-->
            <Label Grid.Column="2" Grid.Row="0" Name="LblDate" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"
                   Foreground="Red" 
                   Content="06.07.2022"/>
            <!--Content="{Binding SelectedItem.date_update, ElementName=DgMaterials, Mode=OneWay, Converter={StaticResource DateTimeConverter}}"-->

            <!-- Tabs -->
            <TabControl Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" SelectedIndex="0" Background="#FFE5E5E5" >
                
                <!-- Main DataGrid -->
                <TabItem Header="Strona główna" >
                    <DataGrid x:Name="DgMaterial" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Margin="2,2,2,2" AutoGenerateColumns="False" 
                      ColumnWidth="*" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True" RowHeaderWidth="20"
                      CanUserAddRows="False"  CanUserResizeColumns="True" CanUserResizeRows="False" FontSize="12" HeadersVisibility="Column"
                      SelectionChanged="DgMaterial_SelectionChanged"
                      HorizontalGridLinesBrush="{StaticResource DataGridBorderColor}"
                      VerticalGridLinesBrush="{StaticResource DataGridBorderColor}"
                      ItemsSource="{Binding Materials}" >
                        <!--SelectedItem="{Binding ActualQuality, Mode=OneWayToSource}"
                      SelectedIndex="{Binding DgRowIndex, Mode=TwoWay, FallbackValue=0}" >-->

                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ColId" Binding="{Binding Id}" Visibility="Collapsed" />
                            <DataGridTextColumn x:Name="ColIsDanger" Binding="{Binding IsDanger}" Visibility="Collapsed" />
                            <DataGridTextColumn x:Name="ColMatFunction" Binding="{Binding FunctionId}" Visibility="Collapsed" />

                            <!-- Arrow selector -->
                            <DataGridTemplateColumn x:Name="ColStatus" HeaderStyle="{StaticResource AllignColmnHeaderCenter}" 
                                                        IsReadOnly="True" CanUserSort="False" CanUserResize="False"
                                                        Width="30">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <StackPanel Background="#FFE5E5E5" Margin="-1,-1,-1,-1">
                                            <Image x:Name="ArrowRight" Width="18" Height="16" Margin="1,1,1,1" Source="/Img/Arrow-right.png" 
                                                   Visibility="Hidden">
                                            </Image>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" >
                                                <Setter TargetName="ArrowRight" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!-- column material name -->
                            <DataGridTextColumn x:Name="ColMaterialName" Header="Nazwa" IsReadOnly="False" Width="0.8*" CanUserSort="False"
                                        HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                        Binding="{Binding Name}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding IsDanger, Converter={StaticResource DangerToRedConverter}, Mode=OneWay}"/>
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="FontSize" Value="12" />
                                        <Setter Property="Padding" Value="5 0 0 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- TMP -->
                            <!--<DataGridTextColumn x:Name="ColMID" Header="MID" IsReadOnly="False" Width="0.1*" CanUserSort="False"
                                        HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                        Binding="{Binding FunctionId}"/>-->


                            <!-- column material function -->
                            <!--ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}},
                                                                Path=DataContext.MaterialFunctions, Mode=OneWay}"-->
                            <DataGridTemplateColumn CanUserSort="False" Header="Funkcja" Width="140"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox IsReadOnly="true" IsEditable="False" 
                                                  ItemsSource="{Binding Source={StaticResource combos}, Path=MaterialFunctions}"
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Id"
                                                  SelectedItem="{Binding MaterialFunction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValue="{Binding FunctionId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=1}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <cmd:EventToCommand Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.OnComboSelectionIndexChanged, Mode=OneWay}" PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            
                            
                            
                            
                            <!-- column price -->
                            <DataGridTextColumn x:Name="ColPrice" Header="Cena" IsReadOnly="False" Width="0.1*" CanUserSort="False"
                                                HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                ElementStyle="{StaticResource AllignCellRight}"
                                                Binding="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ConverterCulture='pl-PL', StringFormat={}{0:G}}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="FontWeight" Value="{Binding Price, Converter={StaticResource PriceToBoldConverter}}" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="False">
                                                <Setter Property="Background" Value="{Binding Price, Converter={StaticResource PriceTocColorConverter}}" />
                                            </Trigger>
                                            <Trigger Property="DataGridCell.IsEditing" Value="True" >
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>



                            <!-- column currency -->
                            <DataGridTemplateColumn CanUserSort="False" Header="Waluta" Width="70"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox IsReadOnly="true" IsEditable="False" 
                                                  ItemsSource="{Binding Source={StaticResource combos}, Path=Currencies}"
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Id"
                                                  SelectedItem="{Binding Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValue="{Binding CurrencyId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=1}" >
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="Foreground" Value="{Binding CurrencyId, Mode=OneWay, Converter={StaticResource CurrncyToColorConverter}}" />
                                                    <Setter Property="FontWeight" Value="{Binding CurrencyId, Mode=OneWay, Converter={StaticResource CurrencyToBoldConverter}}" />
                                                </Style>
                                            </ComboBox.Style>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <cmd:EventToCommand Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.OnComboSelectionIndexChanged, Mode=OneWay}" PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                        </DataGrid.Columns>
                        
                    </DataGrid>
                </TabItem>
                
                <!-- Data and remarks -->
                <TabItem Header="Dane i uwagi" >
                    
                </TabItem>
                
                <!-- CLP -->
                <TabItem Header="CLP" >
                    
                </TabItem>
                
                <!-- Material composition -->
                <TabItem Header="Skład surowca" >
                    
                </TabItem>
            </TabControl>

            <StackPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" Orientation="Horizontal" >
                <Button  x:Name="BtnNaviLeftFirst" Height="20" Width="20" Tag="first" Margin="5,0,0,0" 
                         Command="{Binding MoveFirst, Source={StaticResource navi}}">
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="/img/Arrow-left_first.png" Stretch="Fill" Height="13"/>
                    </StackPanel>
                </Button>
                
                <Button x:Name="BtnNaviLeft" Height="20" Width="20" Tag="left" Margin="1,0,0,0"
                        Command="{Binding MoveLeft, Source={StaticResource navi}}">
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="/img/Arrow-left.png" Stretch="Fill" Height="13"/>
                    </StackPanel>
                </Button>

                <TextBox x:Name="TxtNavieRec" Width="55" HorizontalAlignment="Left" Padding="0,2,0,0" FontSize="11" Height="20"
                     FontWeight="SemiBold" IsReadOnly="True" Margin="1,0,0,0" 
                         Text="{Binding DgRowIndex, Source={StaticResource navi}, Mode=OneWay, Converter={StaticResource NaviCurrentConverter}}"/>

                <Button x:Name="BtnNaviRight" HorizontalAlignment="Left" Height="20" Width="20" Tag="right" Margin="1,0,0,0"
                        Command="{Binding MoveRight, Source={StaticResource navi}}">
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="/img/Arrow-right.png" Stretch="Fill" Height="13"/>
                    </StackPanel>
                </Button>

                <Button x:Name="BtnNaviRightLast" HorizontalAlignment="Left" Height="20" Width="20" Tag="last" Margin="1,0,0,0"
                        Command="{Binding MoveLast, Source={StaticResource navi}}">
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="/img/Arrow-right_last.png" Stretch="Fill" Height="13"/>
                    </StackPanel>
                </Button>

            </StackPanel>
        </Grid>

        
    </DockPanel>
</RibbonWindow>
